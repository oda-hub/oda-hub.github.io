<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>About ODA</title>
    <link>https://odahub.io/</link>
    <description>Recent content on About ODA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://odahub.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://odahub.io/docs/guide-development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://odahub.io/docs/guide-development/</guid>
      <description>MMODA workflow development Guide # The MMODA platform provides access to the Astronomical Open Research Data Analysis Services (ORDAS). Good fraction of these services follow a simple scheme, they:
access publicly available external astronomical data archives to fetch data relevant to specific source or source catalog, transform the fetched data using a workflow based on a Python notebook to derive a data product. display a preview of the data product on the MMODA frontend and/or return the data product to the user via Python API The users of MMODA are encouraged to become its developers and add new ORDAS.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://odahub.io/docs/guide-discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://odahub.io/docs/guide-discovery/</guid>
      <description>Workflow Publishing and Discovery with KG: Astronomer Guide # Latest-Version https://github.com/oda-hub/workflow-discovery/, also deployed as https://odahub.io/ Purpose of this note # We want to demostrate on concrete and scientifically-useful working examples how an astronomer, who might indeed have relatively little interest to look in the code, can leverage ODA Knowledge Base and Knowledge Graphs together with other valuable resources (especially Renku):
collaborate on workflows discover and use ODA-built services discovery and use our record of globally available web-based data analysis services easily contribute your own analysis as web-servces annotate your work in the ways ready for consumption by the synthetic astronomer robots, making some of the reasonable reasoning for scienstics, and most of all, support scientists with discovery space empowering their irreplacible scientific capacities.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://odahub.io/docs/guide-ontology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://odahub.io/docs/guide-ontology/</guid>
      <description>Ontology # Purpose # Ontology defines terms in which we describe what we do: data, workflows, publications, etc.
While creating and discovering workflows it is useful to learn to speak in these terms: find and assign suitable annotations. In an increasingly large number of cases we identify and assign annotations automatically.
The tools we develop commit to implement the common understanding of the terms.
Discovering terms to use # The terms look like URLs, e.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://odahub.io/docs/issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://odahub.io/docs/issues/</guid>
      <description>What if a user experiences a problem? # Purpose # Explain to users how issues are handled, and what can be expected.
Process # user receives a kind message, &amp;ldquo;treatment redirected to humans, follow-up promised&amp;rdquo;. This may be delivered in the interactive session, and/or in the email. issue is addressed by the support, and request can be submitted again. It will be generally pre-computed by the time of the new request.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://odahub.io/docs/reasoning-engine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://odahub.io/docs/reasoning-engine/</guid>
      <description>Details about the reasoning engines # Workflows entities in the KG can undergo various transformations. One key transformation is currying, understood in the same way as function currying - since workflow, for our purposes, is very similar to a function. Currying transforms workflow with parameters with workflow with less parameters (arguments), possibly without any parameters. We assume that only workflow without parameters can be computed (executed).
Workflow execution is</description>
    </item>
    
    <item>
      <title></title>
      <link>https://odahub.io/docs/workflow-development-progression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://odahub.io/docs/workflow-development-progression/</guid>
      <description>Maintaining semantic coherence in workflow development progression: from jupyter notebooks to python modules, packages, API&amp;rsquo;s # At some point, it may be advisable to move part of code in functions of a python module (e.g. my_functions.py), stored in the same repository. The functions can be called from the workflow notebook as from my_functions import my_nice_function; my_nice_function(argument).
If some functions are often re-used, they can be stored in external packages, and even published on pypi (to allow pip install my_function_package).</description>
    </item>
    
  </channel>
</rss>
